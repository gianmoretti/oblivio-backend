//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "designateds")]
pub struct Model {
    pub created_at: DateTime,
    pub updated_at: DateTime,
    #[sea_orm(primary_key)]
    pub id: i32,
    pub email: String,
    pub first_name: String,
    pub last_name: String,
    pub birth_date: Option<Date>,
    pub birth_place: Option<String>,
    pub residence: Option<String>,
    pub phone_number: Option<String>,
    pub fiscal_code: Option<String>,
    pub color: Option<String>,
    pub image_url: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::asset_designateds::Entity")]
    AssetDesignateds,
}

impl Related<super::asset_designateds::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AssetDesignateds.def()
    }
}
