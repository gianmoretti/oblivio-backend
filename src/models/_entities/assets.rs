//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "assets")]
pub struct Model {
    pub created_at: DateTime,
    pub updated_at: DateTime,
    #[sea_orm(primary_key)]
    pub id: i32,
    pub name: String,
    pub description: String,
    pub category: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::asset_designateds::Entity")]
    AssetDesignateds,
    #[sea_orm(has_many = "super::asset_documents::Entity")]
    AssetDocuments,
}

impl Related<super::asset_designateds::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AssetDesignateds.def()
    }
}

impl Related<super::asset_documents::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AssetDocuments.def()
    }
}
